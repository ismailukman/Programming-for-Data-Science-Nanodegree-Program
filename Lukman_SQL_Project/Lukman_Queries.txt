/******** Project SQL ********/

/********** Query #1 Which rent category has the least rent */

WITH t1 AS

(SELECT *
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
JOIN inventory i
ON i.film_id = f.film_id
JOIN rental r
ON r.inventory_id = i.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music') )

SELECT t1.title film_title, t1.name category_name, COUNT(t1.title) rental_count
FROM t1
GROUP BY 1, 2
ORDER BY category_name, film_title


/********** Query #2 Relationship between the minimum and maximum rental duration */

WITH t1 AS 
(SELECT *
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children','Classics','Comedy','Family','Music') )

SELECT t1.title, t1.name, t1.rental_duration,
      NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM t1
ORDER BY standard_quartile


/********** Query #3 Which group of movie were most checked out in the 4th quartile of rental duration */

WITH t1 AS
(SELECT c.name category,
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile

FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children','Classics','Comedy','Family','Music')
ORDER BY category, standard_quartile)

SELECT t1.category, t1.standard_quartile, COUNT(*)
FROM t1
GROUP BY 1,2
ORDER BY category, standard_quartile


/**********Query #4 What is the total payments for top 10 customers per month  */

with t1 as (select (first_name || ' ' || last_name) as name, 
 c.customer_id, 
 p.amount, 
p.payment_date
from customer AS c
join payment AS p
on c.customer_id = p.customer_id),

t2 AS (SELECT 
t1.customer_id
FROM t1
GROUP BY 1
ORDER BY SUM(t1.amount) DESC
LIMIT 10)

SELECT 
date_trunc('month', t1.payment_date) AS payment_month,
t1.name,
SUM(t1.amount)
FROM t1
JOIN t2 ON t1.customer_id = t2.customer_id
WHERE t1.payment_date BETWEEN '20070101' AND '20080101'
GROUP BY 2,1

 
 